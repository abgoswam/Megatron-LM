description: SSH Singularity

target:
  service: sing
  # name: GenAI-Shared-UKSouth # G8
  name: GenAI-Shared-UKSouth2 #G8
  # name: aims-sing-a100-wus3  # G4
  workspace_name: synthetic-datagen-ws-wus3

environment:
  # image: mastervito/pytorch-deepspeed-cu120:20240612
  # registry: docker.io
  # -------------
  image: nvidia/pytorch:24.06-py3
  registry: nvcr.io
  # -------------
  # image: azureml/azureml_dbe70d50f635d0a59c23037292863d55:latest
  # username: syntheticdatagen1
  # registry: syntheticdatagen1.azurecr.io
  # image_setup:
  #   - echo "lalala 0806 a" # dummy to start fresh build
  setup:
    - pip list
    - echo 'Above is packages before launch cmd'
    - nvcc --version
    - echo "export PATH=$$PATH:$$HOME/.local/bin" >> ~/.bashrc && source ~/.bashrc
    - mkdir -p ~/.cache/huggingface && echo -n "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" > ~/.cache/huggingface/token
    - pip install gpustat
    - pip list
    - ls -lhR
    - echo "setup done"

code:
  # local directory of the code. this will be uploaded to the server.
  # $CONFIG_DIR is expanded to the directory of this config file
  local_dir: $CONFIG_DIR
  ignore:
  - my_long_corpus/*

storage:
  synthdatastore:
    storage_account_name: syntheticpipelinewus2
    container_name: datastore
    mount_dir: /mnt/synthdatastore
  outputsynth:
    storage_account_name: syntheticdatag6275770601
    container_name: azureml-blobstore-b4c46be1-7692-48a4-afd0-b6734d6c4b67
    mount_dir: /mnt/outputsynth

env_defaults:
  # ===== NUM_NODES =====
  NN: 1
  # NN: 2
  # ===== GPUS_PER_NODE =====
  # G: 4
  G: 8
  # ====== HIDDEN_SIZE =======
  # H: 1024
  H: 3072
  # ====== SEQ_LENGTH =========
  # S: 1024
  # S: 2048
  S: 4096
  # S: 8192
  # S: 16384
  # S: 32768
  # S: 65536
  # S: 131072
  # S: 262144
  # S: 524288
  # S: 1048576
  # ====== TP / CP =========
  TP: 1
  CP: 8


jobs:
- name: megatron_lm_gpt_NN${NN}_G${G}_H${H}_S${S}_TP${TP}_CP${CP}
  sla_tier: premium  # Default: premium
  execution_mode: basic  # Default: basic
  sku: ${NN}x80G${G}
  # sku: ${NN}x80G${G}-A100-IB-NvLink # use for multinode
  # sku: ${NN}x80G${G}-A100-NvLink
  # sku: G1
  # sku: 80G${G}
  # sku: 80G8
  # sku: 40000000000G8
  # sku: 40G1-A100
  # sku: 40G8-A100-NvLink
  # sku: G4
  # sku: 80G4-A100-NvLink
  priority: high
  process_count_per_node: 1
  submit_args:
    env:
      NCCL_IB_DISABLE: 0
      NCCL_DEBUG: INFO
      NCCL_IB_TIMEOUT: 22
  command:
    - export PATH=$$HOME/.local/bin/:$$PATH
    - export GPUS_PER_NODE=${G}
    - export NUM_NODES=${NN}
    - export HIDDEN_SIZE=${H}
    - export SEQ_LENGTH=${S}
    - export CP=${CP}
    - export TP=${TP}
    # - bash run_03_a_pretrain_gpt2_345m_1GPU_env.sh
    # - bash run_03_b_pretrain_gpt2_345m_4GPU_env.sh
    # - bash run_03_c_pretrain_gpt2_345m_8GPU_env.sh
    # - bash run_03_d_pretrain_gpt.sh
    # - bash run_03_f_pretrain_gpt_long_context.sh
    # - bash run_03_g_pretrain_gpt_long_context.sh
    # - bash run_04_pretrain_gpt_long_context.sh
    # - bash run_05_pretrain_gpt_long_context_bs1.sh
    # - bash run_05_pretrain_gpt_long_context_bs1.sh
    - bash _scripts_trials_02/run_12_pretrain_gpt_long_context_amlt_fix.sh
